Module:
	concept += Concept
;
Concept:
	Object|View|Page|Footer|Menubar|Sidebar
;

Size:
	'small'|'medium'|'large'
;

Color:
	'red'|'blue'|'green'|'black'|'white'|'yellow'|'gray'
;

Style:
	('color' '=' Color) |
	('size' '=' Size)
;

View:
	'view' name=ID ('for' object=[Object]'.'query=[Query])? ':'
		views *= SubView
	';'
;

SubView:
    RowSeparator | ViewInView
;

ViewOnPage:
	selector=Selector 'position' '=' position=/[^\s]+/ (Style)*
;


ViewInView:
	selector=Selector ('at' position=NUMBER)? ('size' size=NUMBER)?
;

Page:
	'page' name=ID ('for' object=[Object]'.'query=[Query])?':'
		('params' '=' urlParams+=UrlParam[","])?
		('indexPage' '=' indexPage=BOOL)?
		'title' '=' title=STRING
		(using *= Use)
		(layout=Layout)*
		views *= ViewOnPage
	';'
;

UrlParam:
    object=[Object] ':' param=ID
;

Use:
	('use' 'menubar' m=[Menubar])|('use' 'sidebar' s=[Sidebar])|('use' 'footer' f=[Footer])	
;

Selector:
	  SelectorFKObject|SelectorObject|SelectorView|DataShow|Form|Jumbo|Paragraph|StaticLink
;

StaticLink:
	'link' stLink=RefLink (classes = HtmlClass)?
;

SelectorObject:
	 ('show')? object=[Object] '.' property=[Property]
;

// property je ID jer ne FK property nije definisan kao Property vec kao label u Meta pravilu
SelectorFKObject:
	 ('show')? object=[Object] '.' property=ID 'by' '{' fkProperties*=PropertyLink[","] '}'
;

PropertyLink:
    property=[Property] ('link' '@' page=[Page] ('as' linkText=STRING)?)?
;

SelectorObjectLink:
    object=[Object] '.' property=[Property] 'link' '@' page=[Page] ('as' linkText=STRING)?
;

SelectorObjectData:
    sol = SelectorObjectLink | so = SelectorObject
;

Form:
	'form' 'for' obj=[Object] 'actions' '=' actions+=FormAction
;

FormAction:
	'save'|'update'|'remove'|'view'
;

SelectorView:
	'show' view=[View]
;

DataShow:
	type=[View] 'data_show' '=' '{' data+=SelectorObjectData[","]  '}'
;

Paragraph:
	'paragraph' paragraph = STRING 
;

Jumbo:
	'jumbo' ':' (jumbo += JumboParameters)
;

JumboParameters:
	('heading' '=' heading=STRING) | ('text' '=' text=STRING) | ('{'ref = RefLink '}')| ('imgPath' '=' imgPath=STRING)
;

HtmlClass:
	'class' '=' '{' htmlClasses += HtmlClassValue[","]  '}'
;

HtmlClassValue:
	ClassKeyPair|ClassKey
;

ClassKey:
	key=STRING
;

ClassKeyPair:
	key=STRING ':' value=STRING
;

PropertyList:
	'parameters' '=' '{' propertyList += STRING[","] '}'
;

ReferencedParameter:
	'@' page=[Page]
;

Property:
	name=ID type=[View] 'label' '=' label=STRING (additionalParameters*=AdditionParameters)
;

AdditionParameters:
	(params=PropertyList | ref_param=ReferencedParameter)| (classes = HtmlClass)|('ref' '=' ref=STRING)
;

Object:
	'object' name=ID ':'
	    ('Meta' ':' meta += Meta ';')?
		properties *= Property
		queries *= Query
	';'
;

Query:
    'query' name=ID ('property''='property=[Property] 'condition''='condition=Condition)? ('sortBy''='sortBy=[Property] ('order''='order=Order)?)? ('rangeFrom''='rangeFrom=INT)? ('rangeTo''='rangeTo=INT)?
;

Meta:
    foreignKeyType=ForeignKeyType object=[Object] ' by ' property=PropertiesForMeta label=STRING
;

ForeignKeyType:
    'single'|'list'
;

PropertiesForMeta:
        properties+=[Property][","]
;

Condition:
    StringCondition | IntegerCondition
;

StringCondition:
    conditionName=StringConditionName '$' parameter=STRING
;

IntegerCondition:
    conditionName=IntegerConditionName '$' parameter=INT
;

StringConditionName:
    'startsWith'|'endsWith'|'matches'
;

IntegerConditionName:
    'lowerThan'|'greaterThan'|'lessEqual'|'greaterEqual'|'equal'
;

Order:
    'asc'|'desc'
;

Layout:
	'layout' name = ID positions *= STRING
;

RefLink:
    label=STRING ref=ReferencedParameter|( 'ref' '=' aps_ref=STRING)
;

Sidebar:
    'sidebar' name=ID ':'
    	('color' '=' color=Color)?
        links*=RefLink
    ';'
;

Footer:
	'footer' name=ID paragraph=STRING (side=Side)? ('color' '=' color=Color)? ';'
;

Side:
	'left'|'right'
;

Menu:
    ('menu' name=ID (side=Side)? ':'
        items*=RefLink 
    ';')| ref = RefLink (side=Side)?
;

Menubar:
    'menubar' name=ID  (brandName=STRING)? (brandLink=ReferencedParameter)? ':'
    	('color' '=' color=Color)?
        menus*=Menu
    ';'
;

RowSeparator:
    '!row' (number=INT)?
;

Row:
    'row' ':'
        selectors*=ViewInView
    ';'
;

// Special rule for comments. Comments start with //
Comment:
  /\/\/.*$/
;